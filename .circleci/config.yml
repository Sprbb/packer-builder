version: 2

jobs:
  build: &build
    docker:
      - image: circleci/golang:1.9.4-stretch
    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Install packet cli and tools
          command: |
            docker create --name packet ebsarr/packet
            docker cp packet:/usr/local/bin/packet ./packet
            sudo mv ./packet /usr/local/bin/packet
            packet -v
            sudo apt-get update && sudo apt-get install -y --no-install-recommends jq unzip curl
            jq --version
            curl -o terraform.zip https://releases.hashicorp.com/terraform/0.11.14/terraform_0.11.14_linux_amd64.zip
            sudo unzip -d /usr/bin terraform.zip
            rm terraform.zip
            terraform --version

      - run:
          name: Provisioning a packer build machine
          command: |
            ./machine.sh create circle${CIRCLE_BUILD_NUM} ${HYPERVISOR}

      - run:
          name: Run packer build
          command: |
            ./build.sh circle${CIRCLE_BUILD_NUM} ${PACKER_TEMPLATE} ${HYPERVISOR}
          no_output_timeout: 9000

  upload: &upload
    docker:
      - image: microsoft/azure-cli:0.10.14
    steps:
      - checkout

      - run:
          name: Install tools
          command: |
            apt-get update && apt-get install -y jq curl
            azure --version
            jq --version
            curl --version

      - run:
          name: Upload to Vagrant Cloud
          command: |
            ./upload.sh ${PACKER_TEMPLATE} ${HYPERVISOR}
          no_output_timeout: 3600

  upload: &upload
    docker:
      - image: microsoft/azure-cli:0.10.14
    steps:
      - checkout

      - run:
          name: Install tools
          command: |
            apt-get update && apt-get install -y jq curl
            azure --version
            jq --version
            curl --version

      - run:
          name: Upload to Vagrant Cloud
          command: |
            ./upload.sh ${PACKER_TEMPLATE} ${HYPERVISOR}
          no_output_timeout: 3600

  windows_2016_docker:
    <<: *build
    environment:
      - PACKER_TEMPLATE: "windows_2016_docker"
      - PACKET_PLAN: "baremetal_1"
      - HYPERVISOR: "virtualbox+vmware"

  windows_2019_docker:
    <<: *build
    environment:
      - PACKER_TEMPLATE: "windows_2019_docker"
      - PACKET_PLAN: "baremetal_1"
      - HYPERVISOR: "virtualbox+vmware"

  windows_server_1809_docker:
    <<: *build
    environment:
      - PACKER_TEMPLATE: "windows_server_1809_docker"
      - PACKET_PLAN: "baremetal_1"
      - HYPERVISOR: "virtualbox+vmware"

  windows_2016_docker_hyperv:
    <<: *build
    environment:
      - PACKER_TEMPLATE: "windows_2016_docker"
      - AZURE_PLAN: "Standard_E4s_v3"
      - HYPERVISOR: "hyperv"

  windows_2019_docker_hyperv:
    <<: *build
    environment:
      - PACKER_TEMPLATE: "windows_2019_docker"
      - AZURE_PLAN: "Standard_E4s_v3"
      - HYPERVISOR: "hyperv"

  windows_2019_docker_azure:
    <<: *build
    environment:
      - PACKER_TEMPLATE: "windows_2019_docker_azure"
      - AZURE_PLAN: "Standard_E4s_v3"
      - HYPERVISOR: "azure"

  windows_2016:
    <<: *build
    environment:
      - PACKER_TEMPLATE: "windows_2016"
      - PACKET_PLAN: "baremetal_1"
      - HYPERVISOR: "virtualbox+vmware"

  windows_2016_hyperv:
    <<: *build
    environment:
      - PACKER_TEMPLATE: "windows_2016"
      - AZURE_PLAN: "Standard_E4s_v3"
      - HYPERVISOR: "hyperv"

  windows_2019:
    <<: *build
    environment:
      - PACKER_TEMPLATE: "windows_2019"
      - PACKET_PLAN: "baremetal_1"
      - HYPERVISOR: "virtualbox+vmware"

  windows_2019_hyperv:
    <<: *build
    environment:
      - PACKER_TEMPLATE: "windows_2019"
      - AZURE_PLAN: "Standard_E4s_v3"
      - HYPERVISOR: "hyperv"

  windows_10:
    <<: *build
    environment:
      - PACKER_TEMPLATE: "windows_10"
      - PACKET_PLAN: "baremetal_1"
      - HYPERVISOR: "virtualbox+vmware"

  windows_10_hyperv:
    <<: *build
    environment:
      - PACKER_TEMPLATE: "windows_10"
      - AZURE_PLAN: "Standard_E4s_v3"
      - HYPERVISOR: "hyperv"

  windows_2012_r2:
    <<: *build
    environment:
      - PACKER_TEMPLATE: "windows_2012_r2"
      - PACKET_PLAN: "baremetal_1"
      - HYPERVISOR: "virtualbox+vmware"

  windows_2012_r2_hyperv:
    <<: *build
    environment:
      - PACKER_TEMPLATE: "windows_2012_r2"
      - AZURE_PLAN: "Standard_E4s_v3"
      - HYPERVISOR: "hyperv"

  windows_server_insider_docker:
    <<: *build
    environment:
      - PACKER_TEMPLATE: "windows_server_insider_docker"
      - PACKET_PLAN: "baremetal_1"
      - HYPERVISOR: "vmware"

  windows_server_insider_docker_hyperv:
    <<: *build
    environment:
      - PACKER_TEMPLATE: "windows_server_insider_docker"
      - AZURE_PLAN: "Standard_E4s_v3"
      - HYPERVISOR: "hyperv"

  upload_windows_2016_docker_hyperv:
    <<: *upload
    environment:
      - PACKER_TEMPLATE: "windows_2016_docker"
      - HYPERVISOR: "hyperv"

  upload_windows_2019_docker_hyperv:
    <<: *upload
    environment:
      - PACKER_TEMPLATE: "windows_2019_docker"
      - HYPERVISOR: "hyperv"

  upload_windows_server_1809_docker_virtualbox:
    <<: *upload
    environment:
      - PACKER_TEMPLATE: "windows_server_1809_docker"
      - HYPERVISOR: "virtualbox"

  upload_windows_server_1809_docker_vmware:
    <<: *upload
    environment:
      - PACKER_TEMPLATE: "windows_server_1809_docker"
      - HYPERVISOR: "vmware"

  upload_windows_2016_docker_virtualbox:
    <<: *upload
    environment:
      - PACKER_TEMPLATE: "windows_2016_docker"
      - HYPERVISOR: "virtualbox"

  upload_windows_2016_docker_vmware:
    <<: *upload
    environment:
      - PACKER_TEMPLATE: "windows_2016_docker"
      - HYPERVISOR: "vmware"

  upload_windows_2016_hyperv:
    <<: *upload
    environment:
      - PACKER_TEMPLATE: "windows_2016"
      - HYPERVISOR: "hyperv"

  upload_windows_2016_virtualbox:
    <<: *upload
    environment:
      - PACKER_TEMPLATE: "windows_2016"
      - HYPERVISOR: "virtualbox"

  upload_windows_2016_vmware:
    <<: *upload
    environment:
      - PACKER_TEMPLATE: "windows_2016"
      - HYPERVISOR: "vmware"

  upload_windows_2019_docker_virtualbox:
    <<: *upload
    environment:
      - PACKER_TEMPLATE: "windows_2019_docker"
      - HYPERVISOR: "virtualbox"

  upload_windows_2019_docker_vmware:
    <<: *upload
    environment:
      - PACKER_TEMPLATE: "windows_2019_docker"
      - HYPERVISOR: "vmware"

  upload_windows_2019_hyperv:
    <<: *upload
    environment:
      - PACKER_TEMPLATE: "windows_2019"
      - HYPERVISOR: "hyperv"

  upload_windows_2019_virtualbox:
    <<: *upload
    environment:
      - PACKER_TEMPLATE: "windows_2019"
      - HYPERVISOR: "virtualbox"

  upload_windows_2019_vmware:
    <<: *upload
    environment:
      - PACKER_TEMPLATE: "windows_2019"
      - HYPERVISOR: "vmware"

  upload_windows_10_hyperv:
    <<: *upload
    environment:
      - PACKER_TEMPLATE: "windows_10"
      - HYPERVISOR: "hyperv"

  upload_windows_10_virtualbox:
    <<: *upload
    environment:
      - PACKER_TEMPLATE: "windows_10"
      - HYPERVISOR: "virtualbox"

  upload_windows_10_vmware:
    <<: *upload
    environment:
      - PACKER_TEMPLATE: "windows_10"
      - HYPERVISOR: "vmware"

  cleanup:
    docker:
      - image: circleci/golang:1.9.4-stretch
    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Install packet cli and tools
          command: |
            docker create --name packet ebsarr/packet
            docker cp packet:/usr/local/bin/packet ./packet
            sudo mv ./packet /usr/local/bin/packet
            packet -v
            sudo apt-get update && sudo apt-get install -y --no-install-recommends jq unzip curl
            jq --version

      - run:
          name: Cleanup old cloud machines
          command: |
            ./machine.sh cleanup
    
workflows:
  version: 2
  # build_10:
  #   jobs:
  #     - windows_10
  #     - windows_10_hyperv
  # build_2012_r2:
  #   jobs:
  #     - windows_2012_r2
  #     - windows_2012_r2_hyperv
  # build_2016:
  #   jobs:
  #     - windows_2016
  #     - windows_2016_hyperv
  # build_2016_docker:
  #   jobs:
  #     - windows_2016_docker
  #     - windows_2016_docker_hyperv
  #     - windows_2019_docker_azure
  # build_2019:
  #   jobs:
  #     - windows_2019
  #     - windows_2019_hyperv
  # build_2019_docker:
  #   jobs:
  #     - windows_2019_docker
  #     - windows_2019_docker_hyperv
  # upload_windows_10:
  #   jobs:
  #     - upload_windows_10_virtualbox
  #     - upload_windows_10_vmware
  #     - upload_windows_10_hyperv
  # upload_2016:
  #   jobs:
  #     - upload_windows_2016_hyperv
  #     - upload_windows_2016_virtualbox
  #     - upload_windows_2016_vmware
  # upload_2016_docker:
  #   jobs:
  #     - upload_windows_2016_docker_hyperv
  #     - upload_windows_2016_docker_virtualbox
  #     - upload_windows_2016_docker_vmware
  upload_2019:
    jobs:
  #     - upload_windows_2019_virtualbox
  #     - upload_windows_2019_vmware
      - upload_windows_2019_hyperv
  upload_2019_docker:
    jobs:
  #     - upload_windows_2019_docker_virtualbox
  #     - upload_windows_2019_docker_vmware
      - upload_windows_2019_docker_hyperv
  # build_1809_docker:
  #   jobs:
  #    - windows_server_1809_docker
  # upload_1809_docker:
  #   jobs:
  #     - upload_windows_server_1809_docker_virtualbox
  #     - upload_windows_server_1809_docker_vmware

  cleanup:
    jobs:
      - cleanup
    triggers:
      - schedule:
          cron: "32 1 * * *"
          filters:
            branches:
              only:
                - master
